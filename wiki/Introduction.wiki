#labels instructions
= Usage Instructions =

I plan to write detailed instructions soon but this will have to suffice for now.

== Security Restrictions ==

The Flash security model restricts a Flex application to making connections only to the server from which it was loaded. Therefore, you must either place your Flex application on the server that hosts the REST web service or you must include a special filed, named crossdomain.xml, in the root of your REST service. Here is a sample crossdomain.xml file that allows connections from a domain named "company.com".

{{{
<?xml version="1.0"?>
<!DOCTYPE cross-domain-policy SYSTEM "http://www.macromedia.com/xml/dtds/cross-domain-policy.dtd">
<cross-domain-policy>
    <allow-access-from domain="*.company.com" />
</cross-domain-policy>
}}}

For detailed instructions about the format of the crossdomain.xml file, see this article:

[http://kb.adobe.com/selfservice/viewContent.do?externalId=tn_14213&sliceId=2]

== Sample Code ==

To use the RestHttpService component, add it to your library path and invoke it from an MXML application. Here is some sample MXML to help get you started (you can download this sample MXML from the Downloads tab):

{{{
<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:rest="com.sourcestream.flex.http.*">

    <mx:Script><![CDATA[
        import mx.controls.Alert;
        import com.sourcestream.flex.http.HttpEvent;
        import com.sourcestream.flex.http.RestHttpService;

        function doPost():void
        {
            postService.send("<body>body of post request</body>");
        }

        function doPut():void
        {
            putService.send("<body>body of put request</body>");
        }

        function dataHandler(event:HttpEvent):void
        {
            Alert.show(event.response.statusCode + " (" + event.response.statusMessage + ")\n\n" + event.data);
        }

        ]]>
    </mx:Script>

    <rest:RestHttpService id="getService" host="localhost" port="8080" path="/interviews" method="{RestHttpService.METHOD_GET}" result="dataHandler(event)"/>
    <rest:RestHttpService id="postService" host="localhost" port="8080" path="/interviews/1/sessions?id=123" method="{RestHttpService.METHOD_POST}" contentType="application/xml" result="dataHandler(event)"/>
    <rest:RestHttpService id="putService" host="localhost" port="8080" path="/sessions/123?id=123" method="{RestHttpService.METHOD_PUT}" contentType="application/xml" result="dataHandler(event)"/>
    <rest:RestHttpService id="deleteService" host="localhost" port="8080" path="/sessions/123?id=123" method="{RestHttpService.METHOD_DELETE}" result="dataHandler(event)"/>

    <mx:Button click="getService.send()" label="Get"/>
    <mx:Button click="doPost()" label="Post"/>
    <mx:Button click="doPut()" label="Put"/>
    <mx:Button click="deleteService.send()" label="Delete"/>
</mx:Application>
}}}